import Head from 'next/head';
import Image from 'next/image';
import SearchBar from '../components/SearchBar';
import styles from '../styles/Home.module.css';
import { useState, useEffect } from 'react';
import Layout from '../components/Layout';

export default function Home() {
  const [name, setName] = useState('');
  const [filteredList, setFilteredList] = useState([]);

  let projects = [
    {
      project_name: 'WiDS 2022 - create folds',
      url: 'https://www.kaggle.com/isha20/wids-2022-create-folds',
      library: ['pandas', 'numpy'],
      language: 'Python',
      tags: null,
    },
    {
      project_name: 'Breast Cancer | EDA + Prediction | 99% acc',
      url: 'https://www.kaggle.com/asatbek/breast-cancer-eda-prediction-99-acc',
      library: [
        'pandas',
        'numpy',
        'scipy.stats',
        'matplotlib.pyplot',
        'seaborn',
      ],
      language: 'Python',
      tags: null,
    },
    {
      project_name: 'fraud_detection',
      url: 'https://www.kaggle.com/akouaorsot/fraud-detection',
      library: ['dplyr', 'tidyverse', 'ggplot2'],
      language: 'R',
      tags: null,
    },
    {
      project_name: 'Predicting Disaster Tweets NLP in R Programming',
      url: 'https://www.kaggle.com/sachinudgam/predicting-disaster-tweets-nlp-in-r-programming',
      library: ['quanteda', 'ggplot2', 'caret'],
      language: 'R',
      tags: null,
    },
    {
      project_name: 'Whales&Dolphins: EffNet Embedding cos Distance',
      url: 'https://www.kaggle.com/andradaolteanu/whales-dolphins-effnet-embedding-cos-distance',
      library: ['torch', 'pandas', 'seaborn', 'numpy'],
      language: 'Python',
      tags: null,
    },
    {
      project_name: 'Austism Prediction with Random Forest',
      url: 'https://www.kaggle.com/sidharkal/autism-prediction-with-random-forest',
      library: ['numpy', 'pandas'],
      language: 'PYthon',
      tags: null,
    },
    {
      project_name: 'California Birth Rates (Exploratory Analysis)',
      url: 'https://www.kaggle.com/yonkotoshiro/california-birth-rates-exploratory-analysis',
      library: ['pandas', 'plotly'],
      language: 'Python',
      tags: null,
    },
    {
      project_name: 'Credit Card Fraud Analysis',
      url: 'https://www.kaggle.com/heyrobin/credit-card-fraud-analysis-eda',
      library: ['numpy', 'pandas'],
      language: 'Python',
      tags: [
        'Data Visualization',
        'Exploratory Data Analysis',
        'Data Analytics',
        'Banking',
        'Insurance',
      ],
    },
    {
      project_name: 'Wine Quality',
      url: 'https://www.kaggle.com/qusaybtoush/wine-quality',
      library: ['pandas', 'numpy', 'seaborn', 'matplotlib.pyplot'],
      language: 'Python',
      tags: [
        'Data Visualization',
        'Classification',
        'Data Analytics',
        'Linear Regression',
      ],
    },
    {
      project_name: 'Titanic',
      url: 'https://www.kaggle.com/foocheechuan/titanic',
      library: ['pandas', 'numpy'],
      language: 'Python',
      tags: ['Beginner', 'Classification', 'Categorical Data'],
    },
  ];

  // searchbox filtering
  useEffect(() => {
    const results = projects.filter(
      (project) =>
        project.project_name.toLowerCase().includes(name) +
        project.project_name.toUpperCase().includes(name) +
        project.language.toLowerCase().includes(name) +
        project.language.toUpperCase().includes(name)

      // project.library.includes(name)
    );
    setFilteredList(results);
  }, [name]);

  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div style={{ textAlign: 'center' }}>
        <img width='100' src='logo.png' />
        <h2 style={{ color: 'white' }}>DataSearch</h2>
      </div>

      <SearchBar
        placeholder='Search projects...'
        getQuery={(q) => setName(q)}
      />

      <table className={styles.DailyEvents}>
        <thead>
          <tr>
            <th>Project Name</th>
            <th>Language</th>
            <th>Libraries</th>
            <th>Tags</th>
          </tr>
        </thead>
        <tbody>
          {filteredList.map((project, index) => (
            <tr className={styles.row} key={index}>
              <td>{project.project_name}</td>
              <td>{project.language}</td>
              <td>{project.library}</td>
              <td>{project.tags}</td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer> */}
    </Layout>
  );
}
